@model FInalProject.DATA.EF.Lesson

@{
    ViewBag.Title = "Edit";
}

<section>
    <hr />
    <h2 style="padding-top:3em;">@ViewBag.Title</h2>


    @using (Html.BeginForm("Edit", "Lessons", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style="color:white">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.LessonId)

            <div class="form-group">
                @Html.LabelFor(model => model.LessonTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.LessonTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LessonTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VideoURL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.VideoURL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoURL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PdfFileName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <input type="file" name="coverImage" />

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input style="color:#e5b929" type="submit" value="Save" class="btn btn-black" />

                    <div class="btn btn-black"> @Html.ActionLink("Back to List", "Index")</div>

                </div>
            </div>
        </div>
        <br />
        <br />
    }


</section>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
