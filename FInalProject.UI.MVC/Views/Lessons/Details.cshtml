@model FInalProject.DATA.EF.Lesson

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Lesson</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.LessonTitle)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LessonTitle)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Introduction)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Introduction)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.VideoURL)
        </dt>

        <dd>
            @*@Html.DisplayFor(model => model.VideoURL)*@
            <div id="player">
                <script src="http://www.youtube.com/player_api"></script>

                <script>
                    // create youtube player
                        var player;
                        var h = '@ViewBag.height';
                        var w = '@ViewBag.width';
                        function onYouTubePlayerAPIReady() {
                        player = new YT.Player('player', {
                        height: 360,
                        width: 640,
                        modestbranding: 1,
                        videoId: '@ViewBag.VideoID',
                        playerVars: {
                        rel: 0,
                        autoplay: 0,
                        disablekb: 0,
                        showsearch: 0,
                        showinfo: 0,
                        controls: 1,
                        fs: 1,
                        hd: 1,
                        html5: 1,
                        iv_load_policy: 3
                        },
                        events: {
                        onReady: onPlayerReady,
                        onStateChange: onPlayerStateChange
                        }
                        });
                        }
                        // autoplay video
                        function onPlayerReady(event) {
                        event.target.playVideo();
                        }

                        // when video ends
                        function onPlayerStateChange(event) {
                        if(event.data === 0) {
                        //do something on end;
                        alert('done');
                        }
                        }
                </script>
            </div>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PdfFileName)
            
        </dt>

        <dd>
            @*@Html.DisplayFor(model => model.PdfFileName)*@
            @*<a href="@Url.Content("~/Content/images" + Model.PdfFileName)" target="_blank">Click to see PDF</a>*@
            <iframe id="iframe" src="@Url.Content("~/Content/PDF" + Model.PdfFileName)" alt="@Model.PdfFileName"></iframe>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Course.CourseName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Course.CourseName)
        </dd>

    </dl>
</div>

<p>
    @ViewBag.ErrorMessage
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.LessonId })
    }

    @Html.ActionLink("Back to List", "Index")
</p>

